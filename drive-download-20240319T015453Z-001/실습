{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNuUdwqX+IwHkGkh54cK3Gw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["class Dog :\n","  def __init__(self, petname, temp) :\n","    self.name=petname\n","    self.temperature=temp\n","\n","  def status(self) :\n","    print('dog name : ', self.name)\n","    print('dog temperature : ', self.temperature)\n","    pass\n","  def selfTempature(self, temp) :\n","    self.temperature = temp\n","    pass\n","  def bark(self) :\n","    print('woof')\n","    pass\n","  pass"],"metadata":{"id":"MQLWU9rknZiW","executionInfo":{"status":"ok","timestamp":1702297815161,"user_tz":-540,"elapsed":5,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["class Dog :                                         # 이름\n","  def __init__(self, petname, temp) :               # 초기화\n","    self.name = petname\n","    self.temperature = temp\n","  def status(self) :                                # 스킬 : 상태창\n","    print('dog name : ', self.name)\n","    print('dog temperature : ', self.temperature)\n","    pass\n","  def selfTempature(self, temp) :                   # 스킬 : 온도\n","    self.temperature = temp\n","    pass\n","  def bark(self) :                                  # 스킬 : 짖기\n","    print('멍멍')\n","    pass\n","  pass"],"metadata":{"id":"7lZCVoAvv_2Q","executionInfo":{"status":"ok","timestamp":1702297804977,"user_tz":-540,"elapsed":7,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["bulgae = Dog('gae', 100)\n","bulgae.status()\n","print()\n","bulgae.selfTempature(200)\n","bulgae.status()\n","print()\n","bulgae.bark()\n","print()\n","bulgae.name = 'bullgae'      # 직접적인 접근도 가능함.\n","bulgae.temperature = 300\n","bulgae.status()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yh6NA-5xxcfj","executionInfo":{"status":"ok","timestamp":1702129013677,"user_tz":-540,"elapsed":12,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"5a18fb05-d3c3-4472-fd67-0badab1dacbf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dog name :  gae\n","dog temperature :  100\n","\n","dog name :  gae\n","dog temperature :  200\n","\n","멍멍\n","\n","dog name :  bullgae\n","dog temperature :  300\n"]}]},{"cell_type":"code","source":["class Coordinate(object) :\n","  def __init__(self, x, y) :\n","    self.x = x\n","    self.y = y\n","  def distance(self, other) :\n","    x_diff_sq = (self.x - other.x)**2\n","    y_diff_sq = (self.y - other.y)**2\n","    return (x_diff_sq + y_diff_sq) ** 0.5\n","\n","org = Coordinate(0,0)\n","c = Coordinate(3,4)\n","\n","print('org : ', org.x, org.y)\n","print('c : ', c.x, c.y)\n","\n","print('distance from org to c ', org.distance(c))\n","print('distance from c to org ', c.distance(org))\n","\n","print(Coordinate.distance(c,org))\n","print(Coordinate.distance(org,c))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0VQlD4bnnZkm","executionInfo":{"status":"ok","timestamp":1699929776076,"user_tz":-540,"elapsed":6,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"396be84d-15b5-49a6-fa19-05eb14918348"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["org :  0 0\n","c :  3 4\n","distance from org to c  5.0\n","distance from c to org  5.0\n","5.0\n","5.0\n"]}]},{"cell_type":"code","source":["class Coordinate :                        # (object) 필요 없잖아\n","  def __init__(self, x, y) :              # 초기화 x,y 필요\n","    self.x=x\n","    self.y=y\n","  def distance(self, other) :             # 스킬 : 거리 재기, other 필요\n","    x_diff_sq = (self.x - other.x)**2     # other가 클래스 정의가 안 되었는데 쓸 수가 있나?\n","    y_diff_sq = (self.y - other.y)**2\n","    return (x_diff_sq + y_diff_sq)**0.5\n","\n","org = Coordinate(0,0)\n","c = Coordinate(3,4)                       # 둘 다 클래스 정의를 하는데. 안 하고 저거는 못 가져오나?\n","\n","print('org : ', org.x, org.y)\n","print('c : ', c.x, c.y)\n","\n","print('distance from org to c ', org.distance(c))\n","print('distance from c to org ', c.distance(org))\n","\n","print(Coordinate.distance(c,org))\n","print(Coordinate.distance(org,c))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3jLZoWXazaYR","executionInfo":{"status":"ok","timestamp":1702129732636,"user_tz":-540,"elapsed":763,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"a21c294f-50e0-411b-be90-f99ed6cceffe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["org :  0 0\n","c :  3 4\n","distance from org to c  5.0\n","distance from c to org  5.0\n","5.0\n","5.0\n"]}]},{"cell_type":"code","source":["hiro = Dog('hiro') # __init__에서 빠진 애 잘 알고."],"metadata":{"id":"Cb8t6GBMnZm6","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"error","timestamp":1702129206271,"user_tz":-540,"elapsed":19,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"29ac23fb-71af-4719-ef88-7c14e182970c"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-d2054c568128>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mhiro\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDog\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'hiro'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: Dog.__init__() missing 1 required positional argument: 'temp'"]}]},{"cell_type":"code","source":["hiro.bark()       # 클래스 정의가 안되어서 클래스 함수는 못 쓴다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":182},"id":"8JEE-1j1nZpG","executionInfo":{"status":"error","timestamp":1702129338896,"user_tz":-540,"elapsed":329,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"ad6ba113-f4ed-41ba-e92b-4dd17a804ab0"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-f64529b1165f>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mhiro\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbark\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'hiro' is not defined"]}]},{"cell_type":"code","source":["hiro = Dog('hiro', 40)\n","hiro.status()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2I-DvcnSnZrE","executionInfo":{"status":"ok","timestamp":1702129438205,"user_tz":-540,"elapsed":317,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"8d592c2a-6a5c-4188-a52f-2a0dd31f69bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dog name :  hiro\n","dog temperature :  40\n"]}]},{"cell_type":"code","source":["hiro.name  # 얜 함수는 아니니까"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"tJFBNWXDnZtU","executionInfo":{"status":"ok","timestamp":1702129655450,"user_tz":-540,"elapsed":343,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"b0f4c0e8-fc81-4954-dd53-bf6148173ea1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'hiro'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["hiro.temperature"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eWpEnT8DnZxC","executionInfo":{"status":"ok","timestamp":1699929243009,"user_tz":-540,"elapsed":7,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"8ed0ead6-9f0d-48ed-b0f0-d21f746579f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["40"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["hiro.selfTempature(100)"],"metadata":{"id":"xUtXdphIrcJ8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hiro.status()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JI1cc9VbrcMA","executionInfo":{"status":"ok","timestamp":1702131257520,"user_tz":-540,"elapsed":5,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"06cd3ad4-12fc-436f-fe44-6a405fbb0ac8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dog name :  hiro\n","dog temperature :  100\n"]}]},{"cell_type":"code","source":["print(hiro)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"czEwuDMw7cyz","executionInfo":{"status":"ok","timestamp":1702131260807,"user_tz":-540,"elapsed":8,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"dad2b532-bffd-417d-a03e-1e005b7b092d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<__main__.Dog object at 0x7b8fb4ebafb0>\n"]}]},{"cell_type":"code","source":["giro.name # 클래스 정의가 안 되어 있으면 안에 있는 거 못 쓰는 거 같은디"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":182},"id":"t7O0W9BD1aHA","executionInfo":{"status":"error","timestamp":1702129687301,"user_tz":-540,"elapsed":345,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"593c72d4-a97d-4bc9-9e7d-6dce8cc86731"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-8aeba1b9ee40>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgiro\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'giro' is not defined"]}]},{"cell_type":"code","source":["# 상속, 다른 누군가가 만든 거 내가 원하는 것만 교체\n","# 다중 상속, 이것 저것 합쳐서\n","\n","class Parent :\n","  def __init__(self) :\n","    self.value = '테스트'\n","    print('Parent 클래스의 __init()__ 메소드가 호출되었습니다.')\n","  def test(self) :\n","    print('Parnet 클래스의 test() 메소드입니다.')\n","\n","class Child(Parent) :           # 이렇게 넣어주는 게 상속임.\n","  def __init__(self) :\n","    Parent.__init__(self)\n","    print('Child 클래스의 __init__() 메소드가 호출되었습니다.')\n","\n","child = Child()\n","child.test()\n","print(child.value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4yDE1oalrcPf","executionInfo":{"status":"ok","timestamp":1702298025238,"user_tz":-540,"elapsed":514,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"b1fc4f78-7296-4044-b323-c60196d3dcb6"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Parent 클래스의 __init()__ 메소드가 호출되었습니다.\n","Child 클래스의 __init__() 메소드가 호출되었습니다.\n","Parnet 클래스의 test() 메소드입니다.\n","테스트\n"]}]},{"cell_type":"code","source":["class Parent() :                              # 이래도 되나? object 라도 적어줘야 하나.\n","  def __init__(self) :\n","    self.value = '테스트'\n","    print('Parent 클래스의 __init__메소드가 호출되었습니다.')\n","  def test(self) :\n","    print('Parent 클래스의 test() 메소드입니다.')\n","\n","class Child(Dog) :                         # Parent를 꼭 넣어야 하나?\n","  def __init__(self) :\n","    Parent.__init__(self)                     # __init__도 호출이 된다.\n","    print('Child 클래스의 __init__() 메소드가 호출되었습니다.')\n","\n","child = Child()\n","child.bark()\n","print(child.value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":291},"id":"5SHUs_pN2dmE","executionInfo":{"status":"error","timestamp":1702130377291,"user_tz":-540,"elapsed":396,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"cbaa17d5-2bde-4cd7-badb-4f8306fd6cb2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Parent 클래스의 __init__메소드가 호출되었습니다.\n","Child 클래스의 __init__() 메소드가 호출되었습니다.\n","멍멍\n","테스트\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-84abb88e1189>\u001b[0m in \u001b[0;36m<cell line: 16>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0mchild\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbark\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mchild\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbulgae\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'Dog' object has no attribute 'value'"]}]},{"cell_type":"code","source":["'''\n","클래스를 구현하는 것과. 클래스를 사용하는 것.\n","\n","클래스 이름\n","클래스 init 가장 먼저 실행되는. 초기화.\n","그 아래로는 여러가지 동작할 수 있는 함수들 메소드.\n","\n","인스턴스.로 만든다고 함. 클래스 써서 적용시키는 애\n","모르겠으면 실제 코드를 먼저 보자.\n","이런 게 정의되어 있구만.\n","\n","용어까지는 중요하지 않다. 클래스 이름은 타입이라고.\n","\n","객체 지향 프로그래밍 객체 클래스 왜 쓰냐. 실제 삶을 모방하려고.\n","고양이 클래스. 토끼 클래스. 그 안에서 여러가지 속성 분류.\n","\n","코드를 짤 때는. 데이터가 많다.\n","\n","\n","클래스 정의 하는 법.\n","클래스에서 뭔가를 쓰기 위해 그저 정의하는 것.'''"],"metadata":{"id":"e7oxdpg6ur0e","colab":{"base_uri":"https://localhost:8080/","height":146},"executionInfo":{"status":"error","timestamp":1701137717654,"user_tz":-540,"elapsed":13,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"d885a686-971a-4ab8-9af6-7761ee19e353"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-594f3f6780a4>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    '''\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m incomplete input\n"]}]},{"cell_type":"code","source":["class Animal(object) :\n","  def __init__(self, age) :\n","    self.age = age\n","    self.name = None          # 기본값. 굳이 처음에 안 넣어도 작동 함.\n","  def get_age(self) :\n","    return self.age\n","  def get_name(self) :\n","    return self.name\n","  def set_age(self, newage) : # 새로운 값을 넣을 수 있을 듯\n","    self.age = newage         # __init__에 있는 함수잖아.\n","  def set_name(self, newname=\"\") : # 얘는 왜 따옴표가 들어감? 기본값.\n","    self.name = newname            # 얘도 __init__에 있는 함수\n","  def __str__(self) : # 자기소개\n","    return \"animal:\" + str(self.name) + \":\" + str(self.age)\n"],"metadata":{"id":"UbFUfY_itXp3","executionInfo":{"status":"ok","timestamp":1702344374276,"user_tz":-540,"elapsed":3,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["a = Animal(25)\n","a.set"],"metadata":{"id":"-UWdW1_ooWbx","executionInfo":{"status":"ok","timestamp":1702344461108,"user_tz":-540,"elapsed":14,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["print(\"＼n---- animal tests ----\")\n","a = Animal(4) # 인스턴스\n","print(a)      # __str__이 여기서 써먹네\n","print(a.age)  # 허용되나 추천은 안 함. 왜냐 바로 데이터 접근하는 거라 수정될 수 있다.\n","print(a.get_age())\n","a.name= 'fluffy' # 허용됨. 추천은 안 함. 같은 이유\n","print(a)\n","a.set_name('Fluffy')\n","print(a)\n","a.set_name() # 공백을 기본값으로 지정했다고 생각하면 됨. 그냥 실행하면 지워지는 효과.\n","print(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U919I0ApuYyM","executionInfo":{"status":"ok","timestamp":1701138301902,"user_tz":-540,"elapsed":7,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"d826b6dd-529d-4f9f-85a9-6d39fed79740"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["＼n---- animal tests ----\n","animal:None:4\n","4\n","4\n","animal:fluffy:4\n","animal:Fluffy:4\n","animal::4\n"]}]},{"cell_type":"code","source":["''' 상속\n","다른 클래스에서 또 가져와서 자질구레하게 계속 속성을 만들어가는 것.\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"8aasyOunvebJ","executionInfo":{"status":"ok","timestamp":1701138533135,"user_tz":-540,"elapsed":17,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"94014745-eda8-4154-e4de-244fc9b0d410"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["' 상속\\n다른 클래스에서 또 가져와서 자질구레하게 계속 속성을 만들어가는 것.\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["class Cat(Animal) : # Animal의 모든 것을 가져오는 것.\n","  def speak(self) : # 함수를 추가해 주는 것.\n","    print('meow')\n","  def __str__(self) : # 똑같은 걸 새로 만들면 덮어쓰는 것\n","    return \"cat:\" + str(self.name) + ':' + str(self.age) # 자기소개"],"metadata":{"id":"XBaTytu3wgXN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b=Cat(4) # 안에 받아가는 변수는 Animal이랑 동일하다.\n","b.speak() # 짖어\n","print(b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"znGF1KkZw2an","executionInfo":{"status":"ok","timestamp":1702131950951,"user_tz":-540,"elapsed":4,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"12378d05-4810-499a-e7e8-18109e6862be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["meow\n","cat:None:4\n"]}]},{"cell_type":"code","source":["print(\"＼n---- cat tests ----\")\n","a = Animal(4)\n","c = Cat(5)\n","print(c)\n","c.set_name('Jelly')\n","print(c)\n","c.speak()\n","print(c.get_age())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9LXOJTeJw9LK","executionInfo":{"status":"ok","timestamp":1701138743260,"user_tz":-540,"elapsed":308,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"5fa50e08-1641-478a-b006-999744df0998"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["＼n---- cat tests ----\n","cat:None:5\n","cat:Jelly:5\n","meow\n","5\n"]}]},{"cell_type":"code","source":["a.speak() # 이건 왜 실행이 안되냐. Animal 클래스에 speak 함수가 없기 때문이다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":182},"id":"TP6U91GtxT9l","executionInfo":{"status":"error","timestamp":1701139220152,"user_tz":-540,"elapsed":426,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"9c2627dd-535f-4260-ef6c-5ae0eacf4d29"},"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-b70ef92e87de>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mspeak\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# 이건 왜 실행이 안되냐. Animal 클래스에 speak 함수가 없기 때문이다.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'Animal' object has no attribute 'speak'"]}]},{"cell_type":"code","source":["class Person(Animal) : # 얘도 Animal 상속 받음. 상속자여?\n","  def __init__(self, name, age) : # 필요한 변수는 뭐가 기준이지? name이랑 age다.\n","    Animal.__init__(self, age)    # 상속받은 __init__ 함수 호출\n","    self.set_name(name)           # 상속받은 set.name 함수\n","    self.friends = []             # 친구들을 만들어주자.\n","\n","  def get_friends(self) : # 친구들 반환\n","    return self.friends\n","  def speak(self) :       # 안녕\n","    print('hello')\n","  def add_friend(self, fname) : # 너 나의 동료가 되어라.\n","    if fname not in self.friends : # 친구 리스트에 없으면 추가.\n","      self.friends.append(fname)\n","  def age_diff(self, other) : # 나이 서열 정리 들어갑니다. 이러면 친구도 Person으로 클래스 정의 되어야.\n","    diff = self.age - other.age\n","    print(abs(diff), 'year differnece') # 절대값\n","  def __str__(self) :\n","    return 'person:'+str(self.name)+\":\"+str(self.age) # 자개소개 겹치면 뭘 반환하나. 이걸 반환하는 듯."],"metadata":{"id":"vID5CPekzIGl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"＼n---- person tests ----\")\n","p1 = Person(\"jack\", 30)\n","p2 = Person('jill', 25)\n","print(p1.get_name())\n","print(p1.get_age())\n","print(p2.get_name())\n","print(p2.get_age())\n","print(p1)               # 이러면 자기소개가 프린트됨.\n","p1.speak()\n","p1.age_diff(p2)         # 너와 나의 나이 차이\n","print(p1.get_friends()) # 친구 누구 있냐. 확인\n","p1.add_friend('jill')\n","print(p1.get_friends())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8_x0ofjf0rXv","executionInfo":{"status":"ok","timestamp":1701140177845,"user_tz":-540,"elapsed":8,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"78c7c2f6-6ecf-4e91-fc16-1871255e2fe5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["＼n---- person tests ----\n","jack\n","30\n","jill\n","25\n","person:jack:30\n","hello\n","5 year differnece\n","[]\n","['jill']\n"]}]},{"cell_type":"code","source":["p1=Person('jack',30)\n","p2=Person('jill',25)\n","print(p1.get_name())\n","print(p1.get_age())\n","print(p2.get_name())\n","print(p2.get_age()"],"metadata":{"id":"BzxFityqn6Ox"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Jinsu = Person('Jinsu', 56)"],"metadata":{"id":"16yxc-FB1EjF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 선택 정렬\n","''' 원리\n","제일 작은 값을 찾아서 맨 앞에 애랑 바꿈.\n","이걸 반복\n","'''\n","value=[87, 83, 52, 2, 6]\n","print (value)\n","i=0                           # 전체적인 반복\n","j=0                           # 세부적인 반복\n","mini = 0                      # 가장 작은 값 저장 받을 애, 인덱스로 받음.\n","temp = 0                      # 교환 때 임시 저장\n","while i < len(value) :\n","  mini = i                    # 처음 시작한 애가 가장 작다로 출발.\n","  j = i+1                     # i+1부터 리스트 찾기.\n","  while j < len(value) :\n","    if value[mini] > value[j] :   # 여기서 mini가 쓰이는.\n","      mini = j\n","    j = j+1\n","  temp = value[i]\n","  value[i] = value[mini]\n","  value[mini] = temp\n","  print(\"Step-\",i+1,\"-\",value)\n","  i=i+1"],"metadata":{"id":"u0O1hffp0_8F","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701936107129,"user_tz":-540,"elapsed":13,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"0cc3059b-da03-4bad-f11f-f940608ae342"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[87, 83, 52, 2, 6]\n","Step- 1 - [2, 83, 52, 87, 6]\n","Step- 2 - [2, 6, 52, 87, 83]\n","Step- 3 - [2, 6, 52, 87, 83]\n","Step- 4 - [2, 6, 52, 83, 87]\n","Step- 5 - [2, 6, 52, 83, 87]\n"]}]},{"cell_type":"code","source":["# 버블 정렬\n","''' 원리\n","i랑 j의 2개의 변수를 가지고 위치를 지정하고.\n","옆에 애랑 비교하고 자리 바꾸기.\n","'''\n","alist = [11,3,55,24,13,44,2,1,12,3]\n","print(alist)\n","i=0                            # 기준\n","while i < len(alist) :         # 반복 돌리기.\n","  j=0                          # 비교용 변수\n","  while j < len(alist) -1 -i : # -1이 붙은 이유는 끝까지 가면 리스트를 벗어남. -i가 붙은 이유는 이미 끝으로 보냈기 때문에 또 할 필요가 없음\n","    if alist[j] > alist[j+1] :\n","      temp = alist[j+1]        # 바꿀 값 임시 저장.\n","      alist[j+1] = alist[j]\n","      alist[j] = temp\n","    print(alist)\n","    j = j+1\n","  print('다음')\n","  i = i+1\n","print(alist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NDFAn3czD5im","executionInfo":{"status":"ok","timestamp":1701932917582,"user_tz":-540,"elapsed":17,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"b1de39d4-1e27-4f6d-cf9c-34a1318576a0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[11, 3, 55, 24, 13, 44, 2, 1, 12, 3]\n","[3, 11, 55, 24, 13, 44, 2, 1, 12, 3]\n","[3, 11, 55, 24, 13, 44, 2, 1, 12, 3]\n","[3, 11, 24, 55, 13, 44, 2, 1, 12, 3]\n","[3, 11, 24, 13, 55, 44, 2, 1, 12, 3]\n","[3, 11, 24, 13, 44, 55, 2, 1, 12, 3]\n","[3, 11, 24, 13, 44, 2, 55, 1, 12, 3]\n","[3, 11, 24, 13, 44, 2, 1, 55, 12, 3]\n","[3, 11, 24, 13, 44, 2, 1, 12, 55, 3]\n","[3, 11, 24, 13, 44, 2, 1, 12, 3, 55]\n","다음\n","[3, 11, 24, 13, 44, 2, 1, 12, 3, 55]\n","[3, 11, 24, 13, 44, 2, 1, 12, 3, 55]\n","[3, 11, 13, 24, 44, 2, 1, 12, 3, 55]\n","[3, 11, 13, 24, 44, 2, 1, 12, 3, 55]\n","[3, 11, 13, 24, 2, 44, 1, 12, 3, 55]\n","[3, 11, 13, 24, 2, 1, 44, 12, 3, 55]\n","[3, 11, 13, 24, 2, 1, 12, 44, 3, 55]\n","[3, 11, 13, 24, 2, 1, 12, 3, 44, 55]\n","다음\n","[3, 11, 13, 24, 2, 1, 12, 3, 44, 55]\n","[3, 11, 13, 24, 2, 1, 12, 3, 44, 55]\n","[3, 11, 13, 24, 2, 1, 12, 3, 44, 55]\n","[3, 11, 13, 2, 24, 1, 12, 3, 44, 55]\n","[3, 11, 13, 2, 1, 24, 12, 3, 44, 55]\n","[3, 11, 13, 2, 1, 12, 24, 3, 44, 55]\n","[3, 11, 13, 2, 1, 12, 3, 24, 44, 55]\n","다음\n","[3, 11, 13, 2, 1, 12, 3, 24, 44, 55]\n","[3, 11, 13, 2, 1, 12, 3, 24, 44, 55]\n","[3, 11, 2, 13, 1, 12, 3, 24, 44, 55]\n","[3, 11, 2, 1, 13, 12, 3, 24, 44, 55]\n","[3, 11, 2, 1, 12, 13, 3, 24, 44, 55]\n","[3, 11, 2, 1, 12, 3, 13, 24, 44, 55]\n","다음\n","[3, 11, 2, 1, 12, 3, 13, 24, 44, 55]\n","[3, 2, 11, 1, 12, 3, 13, 24, 44, 55]\n","[3, 2, 1, 11, 12, 3, 13, 24, 44, 55]\n","[3, 2, 1, 11, 12, 3, 13, 24, 44, 55]\n","[3, 2, 1, 11, 3, 12, 13, 24, 44, 55]\n","다음\n","[2, 3, 1, 11, 3, 12, 13, 24, 44, 55]\n","[2, 1, 3, 11, 3, 12, 13, 24, 44, 55]\n","[2, 1, 3, 11, 3, 12, 13, 24, 44, 55]\n","[2, 1, 3, 3, 11, 12, 13, 24, 44, 55]\n","다음\n","[1, 2, 3, 3, 11, 12, 13, 24, 44, 55]\n","[1, 2, 3, 3, 11, 12, 13, 24, 44, 55]\n","[1, 2, 3, 3, 11, 12, 13, 24, 44, 55]\n","다음\n","[1, 2, 3, 3, 11, 12, 13, 24, 44, 55]\n","[1, 2, 3, 3, 11, 12, 13, 24, 44, 55]\n","다음\n","[1, 2, 3, 3, 11, 12, 13, 24, 44, 55]\n","다음\n","다음\n","[1, 2, 3, 3, 11, 12, 13, 24, 44, 55]\n"]}]}]}