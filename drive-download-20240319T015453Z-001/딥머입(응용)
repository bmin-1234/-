{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP5V8ozcFUFrfLc/BUdMaVq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["> 데이터 로딩"],"metadata":{"id":"6UtmjcFh1q2s"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RO986pqUe_Bv","executionInfo":{"status":"ok","timestamp":1706843642382,"user_tz":-540,"elapsed":18399,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"2c5bddd5-9956-4491-da2c-ec4574476b44"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /gdirve/\n"]}],"source":["# 구글 드라이브 마운트\n","from google.colab import drive\n","drive.mount('/gdirve/')"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"uB_Y0oDof0HO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","drive_path = '/content/drive/MyDrive/'\n","train = pd.read_csv(drive_path + 'titanic/train.csv')\n","test = pd.read_csv(drive_path +'titanic/test.csv')\n","submission = pd.read_csv(drive_path +'titanic/submission.csv')\n","print(train.shape, test.shape, submission.shape)\n","'''"],"metadata":{"id":"8yIU6-lPmMHB","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"error","timestamp":1706843646658,"user_tz":-540,"elapsed":6,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"830d4c0c-a15c-41e8-88c5-1e7256365808"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/titanic/train.csv'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-15e5e080a477>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdrive_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'/content/drive/MyDrive/'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mtrain\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrive_path\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'titanic/train.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mtest\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrive_path\u001b[0m \u001b[0;34m+\u001b[0m\u001b[0;34m'titanic/test.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0msubmission\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrive_path\u001b[0m \u001b[0;34m+\u001b[0m\u001b[0;34m'titanic/submission.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msubmission\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m                     \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew_arg_name\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_arg_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mF\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    948\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    952\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    603\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    604\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 605\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    606\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1440\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1441\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1442\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1443\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1444\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1733\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1735\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1736\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1737\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    854\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    855\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 856\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    857\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    858\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/titanic/train.csv'"]}]},{"cell_type":"code","source":["train = pd.read_csv('/content/titanic/train.csv')\n","test = pd.read_csv('/content/titanic/test.csv')\n","submission = pd.read_csv('/content/titanic/submission.csv')\n","print(train.shape, test.shape, submission.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X71ppiwb0nq9","executionInfo":{"status":"ok","timestamp":1706843914890,"user_tz":-540,"elapsed":435,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"c1e8afac-5211-4274-a657-38b63fc0be09"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["(891, 12) (418, 11) (418, 2)\n"]}]},{"cell_type":"code","source":["'''\n","PassengerID : 탑승객 고유 아이디\n","Survival : 탑승객 생존 유무 (0: 사망, 1: 생존)\n","Pclass : 등실의 등급\n","Name : 이름\n","Sex : 성별\n","Age : 나이\n","Sibsp : 함께 탐승한 형제자매, 아내, 남편의 수\n","Parch : 함께 탐승한 부모, 자식의 수\n","Ticket :티켓 번호\n","Fare : 티켓의 요금\n","Cabin : 객실번호\n","Embarked : 배에 탑승한 항구 이름 ( C = Cherbourn, Q = Queenstown, S = Southampton)\n","'''"],"metadata":{"id":"l1FEenKmlm-K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 학습 데이터이므로 예측 타깃이 되는 목표 변수(Survived)가 포함\n","train.head(3)"],"metadata":{"id":"8hL2IPwUl9dm","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1706843918657,"user_tz":-540,"elapsed":6,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"326a02ce-e002-44bb-bb4d-33a995323589"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived  Pclass  \\\n","0            1         0       3   \n","1            2         1       1   \n","2            3         1       3   \n","\n","                                                Name     Sex   Age  SibSp  \\\n","0                            Braund, Mr. Owen Harris    male  22.0      1   \n","1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                             Heikkinen, Miss. Laina  female  26.0      0   \n","\n","   Parch            Ticket     Fare Cabin Embarked  \n","0      0         A/5 21171   7.2500   NaN        S  \n","1      0          PC 17599  71.2833   C85        C  \n","2      0  STON/O2. 3101282   7.9250   NaN        S  "],"text/html":["\n","  <div id=\"df-60414e1e-c228-4a07-8a4f-bf1822668cc6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60414e1e-c228-4a07-8a4f-bf1822668cc6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-60414e1e-c228-4a07-8a4f-bf1822668cc6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-60414e1e-c228-4a07-8a4f-bf1822668cc6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7b5812e9-e30f-46fe-8844-733ea8f25956\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b5812e9-e30f-46fe-8844-733ea8f25956')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7b5812e9-e30f-46fe-8844-733ea8f25956 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# 예측해야 하는 문제인 테스트 데이터이므로 예측 타깃이 되는 목표 변수(Survived)가 없다.\n","test.head(2)"],"metadata":{"id":"KHD1XLRll8ZB","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1706843920243,"user_tz":-540,"elapsed":277,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"f8a7d159-3215-4dc4-f407-f8d0b2beec59"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Pclass                              Name     Sex   Age  SibSp  \\\n","0          892       3                  Kelly, Mr. James    male  34.5      0   \n","1          893       3  Wilkes, Mrs. James (Ellen Needs)  female  47.0      1   \n","\n","   Parch  Ticket    Fare Cabin Embarked  \n","0      0  330911  7.8292   NaN        Q  \n","1      0  363272  7.0000   NaN        S  "],"text/html":["\n","  <div id=\"df-176da7ca-31d7-4d9a-b302-ce7e1ff40974\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-176da7ca-31d7-4d9a-b302-ce7e1ff40974')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-176da7ca-31d7-4d9a-b302-ce7e1ff40974 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-176da7ca-31d7-4d9a-b302-ce7e1ff40974');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b42fd91-438d-44fa-8350-743f1096bd7f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b42fd91-438d-44fa-8350-743f1096bd7f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b42fd91-438d-44fa-8350-743f1096bd7f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# 418명 승객에 대한 생존 여부를 예측하고, 예측값을 열에 입력해야 한다.\n","submission.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cAaJXJx_lHUb","executionInfo":{"status":"ok","timestamp":1706843937628,"user_tz":-540,"elapsed":6,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"1d85b433-8096-41e2-d3b7-d05a5391b5ce"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived\n","0          892         0\n","1          893         1\n","2          894         0\n","3          895         0\n","4          896         1"],"text/html":["\n","  <div id=\"df-87ad6d3a-6a2e-4a22-a687-19df6200af12\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87ad6d3a-6a2e-4a22-a687-19df6200af12')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-87ad6d3a-6a2e-4a22-a687-19df6200af12 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-87ad6d3a-6a2e-4a22-a687-19df6200af12');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46285037-e810-4d0a-b55e-79b3a539cf48\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46285037-e810-4d0a-b55e-79b3a539cf48')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46285037-e810-4d0a-b55e-79b3a539cf48 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["> 데이터 구조"],"metadata":{"id":"4WEDc5qH1fs_"}},{"cell_type":"code","source":["train.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RmPdk66g1hx_","executionInfo":{"status":"ok","timestamp":1706844159009,"user_tz":-540,"elapsed":294,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"fb82a50f-06e9-426e-881e-8fa4f72706ac"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"code","source":["train.describe(include = 'all')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"sUVP8pLW1wan","executionInfo":{"status":"ok","timestamp":1706844194178,"user_tz":-540,"elapsed":13,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"2c346fb7-a6ee-4b1d-bc3d-1b291bbd6625"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        PassengerId    Survived      Pclass                     Name   Sex  \\\n","count    891.000000  891.000000  891.000000                      891   891   \n","unique          NaN         NaN         NaN                      891     2   \n","top             NaN         NaN         NaN  Braund, Mr. Owen Harris  male   \n","freq            NaN         NaN         NaN                        1   577   \n","mean     446.000000    0.383838    2.308642                      NaN   NaN   \n","std      257.353842    0.486592    0.836071                      NaN   NaN   \n","min        1.000000    0.000000    1.000000                      NaN   NaN   \n","25%      223.500000    0.000000    2.000000                      NaN   NaN   \n","50%      446.000000    0.000000    3.000000                      NaN   NaN   \n","75%      668.500000    1.000000    3.000000                      NaN   NaN   \n","max      891.000000    1.000000    3.000000                      NaN   NaN   \n","\n","               Age       SibSp       Parch  Ticket        Fare    Cabin  \\\n","count   714.000000  891.000000  891.000000     891  891.000000      204   \n","unique         NaN         NaN         NaN     681         NaN      147   \n","top            NaN         NaN         NaN  347082         NaN  B96 B98   \n","freq           NaN         NaN         NaN       7         NaN        4   \n","mean     29.699118    0.523008    0.381594     NaN   32.204208      NaN   \n","std      14.526497    1.102743    0.806057     NaN   49.693429      NaN   \n","min       0.420000    0.000000    0.000000     NaN    0.000000      NaN   \n","25%      20.125000    0.000000    0.000000     NaN    7.910400      NaN   \n","50%      28.000000    0.000000    0.000000     NaN   14.454200      NaN   \n","75%      38.000000    1.000000    0.000000     NaN   31.000000      NaN   \n","max      80.000000    8.000000    6.000000     NaN  512.329200      NaN   \n","\n","       Embarked  \n","count       889  \n","unique        3  \n","top           S  \n","freq        644  \n","mean        NaN  \n","std         NaN  \n","min         NaN  \n","25%         NaN  \n","50%         NaN  \n","75%         NaN  \n","max         NaN  "],"text/html":["\n","  <div id=\"df-d1e79c58-f454-40a7-a89a-dcd08fd08e2e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891</td>\n","      <td>891.000000</td>\n","      <td>204</td>\n","      <td>889</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>891</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>681</td>\n","      <td>NaN</td>\n","      <td>147</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>347082</td>\n","      <td>NaN</td>\n","      <td>B96 B98</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>577</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>644</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.000000</td>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>NaN</td>\n","      <td>32.204208</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>257.353842</td>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>NaN</td>\n","      <td>49.693429</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>223.500000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>7.910400</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>446.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>14.454200</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.500000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>31.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>NaN</td>\n","      <td>512.329200</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1e79c58-f454-40a7-a89a-dcd08fd08e2e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d1e79c58-f454-40a7-a89a-dcd08fd08e2e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d1e79c58-f454-40a7-a89a-dcd08fd08e2e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b993fde-aec5-4154-b85f-eafff31579db\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b993fde-aec5-4154-b85f-eafff31579db')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b993fde-aec5-4154-b85f-eafff31579db button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["> 결측값 확인"],"metadata":{"id":"lxGQU7Dx2Cyd"}},{"cell_type":"code","source":["def hex_to_rgb(hex_code):\n","    # 16진수 RGB 값을 10진수로 변환\n","    r = int(hex_code[0:2], 16)\n","    g = int(hex_code[2:4], 16)\n","    b = int(hex_code[4:6], 16)\n","\n","    # 255로 나누어 0과 1 사이의 범위로 조정\n","    r_normalized = r / 255\n","    g_normalized = g / 255\n","    b_normalized = b / 255\n","\n","    return (r_normalized, g_normalized, b_normalized)\n","\n","# 예시: \"dcdcdc\"를 0과 1 사이의 범위로 표현\n","rgb_normalized = hex_to_rgb(\"ffdab9\")\n","print(rgb_normalized)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ycki-Xir3xwr","executionInfo":{"status":"ok","timestamp":1706844737169,"user_tz":-540,"elapsed":301,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"5c09dd06-8290-42b7-a2b9-edce1f31eb59"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["(1.0, 0.8549019607843137, 0.7254901960784313)\n"]}]},{"cell_type":"code","source":["import missingno as msno\n","msno.bar(train, figsize = (10,5), color=(1.0, 0.8549019607843137, 0.7254901960784313))\n","plt.show()\n","\n","color_good = (1.0, 0.8549019607843137, 0.7254901960784313)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":594},"id":"qyKXdz9f14Fb","executionInfo":{"status":"ok","timestamp":1706844929189,"user_tz":-540,"elapsed":787,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"35281ba4-97c5-468a-92da-a389cc325cae"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["msno.matrix(test, figsize=(10,5), color=color_good)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":575},"id":"dcHpxG2G3Lb1","executionInfo":{"status":"ok","timestamp":1706844930085,"user_tz":-540,"elapsed":564,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"ed4bfc59-fa92-433d-a198-2333429c1815"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["> 상관 관계 분석"],"metadata":{"id":"-QFh6zzJ47Bn"}},{"cell_type":"code","source":["plt.figure(figsize=(8,8))\n","sns.set(font_scale=0.8)\n","sns.heatmap(train.corr(), annot=True, cbar=True)    # 상관관계는 숫자형 데이터로 구성된 애들만 보여 줌.\n","plt.show()\n","\n","# 찾는 것은 목표 변수인 survived와 상관관계가 높은 것들. Pclass(음의 상관), Fare(양의 상관)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":740},"id":"G5FRDn4j4pzN","executionInfo":{"status":"ok","timestamp":1706845083448,"user_tz":-540,"elapsed":1215,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"4d471d8f-6d6e-4197-8e65-e10ce224371b"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-21-38b10599b85d>:3: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  sns.heatmap(train.corr(), annot=True, cbar=True)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["> 데이터 결합"],"metadata":{"id":"bKk9c5n96O7q"}},{"cell_type":"code","source":["# 타이타닉 전체 데이터셋 준비\n","train['TrainSplit'] = 'Train'               # 이러면 글자만 들어가네. 마킹해놓는 거.\n","test['TrainSplit'] = 'Test'\n","data = pd.concat([train, test], axis = 0)   # concat 함수로 데이터프레임 2개를 행으로 연결\n","print(data.shape)\n","test.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":130},"id":"ya96n5Lt5NFn","executionInfo":{"status":"ok","timestamp":1706845472740,"user_tz":-540,"elapsed":8,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"d03dad17-76f0-4e75-85ad-733873a68d89"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["(1309, 13)\n"]},{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Pclass                              Name     Sex   Age  SibSp  \\\n","0          892       3                  Kelly, Mr. James    male  34.5      0   \n","1          893       3  Wilkes, Mrs. James (Ellen Needs)  female  47.0      1   \n","\n","   Parch  Ticket    Fare Cabin Embarked TrainSplit  \n","0      0  330911  7.8292   NaN        Q       Test  \n","1      0  363272  7.0000   NaN        S       Test  "],"text/html":["\n","  <div id=\"df-0f7ea58a-b416-4aaf-8e89-47d50ab792b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>TrainSplit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>Test</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7.0000</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>Test</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f7ea58a-b416-4aaf-8e89-47d50ab792b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f7ea58a-b416-4aaf-8e89-47d50ab792b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f7ea58a-b416-4aaf-8e89-47d50ab792b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6dc2348-3f12-4aef-aa78-100718d53d43\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6dc2348-3f12-4aef-aa78-100718d53d43')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6dc2348-3f12-4aef-aa78-100718d53d43 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["data.columns.tolist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N39layuRBatJ","executionInfo":{"status":"ok","timestamp":1706847239420,"user_tz":-540,"elapsed":367,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"2c048269-dea7-46dc-a56d-3e3dc709e393"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['PassengerId',\n"," 'Survived',\n"," 'Pclass',\n"," 'Name',\n"," 'Sex',\n"," 'Age',\n"," 'SibSp',\n"," 'Parch',\n"," 'Ticket',\n"," 'Fare',\n"," 'Cabin',\n"," 'Embarked',\n"," 'TrainSplit']"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# 숫자형 피처 추출\n","data_num = data.loc[:, ['PassengerId', 'Age', 'SibSp', 'Parch', 'Fare','Survived']]\n","\n","# 결측값 대체\n","data_num['Age'] = data_num['Age'].fillna(data_num['Age'].mean())   # 평균으로 채워버리고\n","data_num['Fare'] = data_num['Fare'].fillna(data_num['Fare'].mode()[0])  # 최빈값으로 채우고\n","\n","# 학습용 데이터와 예측 대상인 테스트 데이터 구분\n","selected_features = ['PassengerId', 'Age', 'SibSp', 'Parch', 'Fare']"],"metadata":{"id":"g5awagpL6-3R","executionInfo":{"status":"ok","timestamp":1706847492493,"user_tz":-540,"elapsed":454,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["x_train = data_num.loc[data['TrainSplit'] == 'Train', selected_features]   # 행 선택, 열 선택\n","y_train = data_num.loc[data['TrainSplit'] == 'Train', 'Survived']\n","\n","x_test = data_num.loc[data['TrainSplit'] == 'Test', selected_features]\n","\n","print('Train 데이터셋 크기 :', x_train.shape, y_train.shape)\n","print('Test 데이터셋 크기 :', x_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PltS3kmnCaPs","executionInfo":{"status":"ok","timestamp":1706847725677,"user_tz":-540,"elapsed":288,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"2e9ebb77-7319-4020-8422-5eeaa0009610"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Train 데이터셋 크기 : (891, 5) (891,)\n","Test 데이터셋 크기 : (418, 5)\n"]}]},{"cell_type":"markdown","source":["> 모델 학습 및 검증"],"metadata":{"id":"RMlMAvRgDYdg"}},{"cell_type":"code","source":["# 훈련 - 검증 데이터 분할\n","\n","from sklearn.model_selection import train_test_split\n","x_tr, x_val, y_tr, y_val = train_test_split(x_train, y_train, test_size=0.2, shuffle=True, random_state=20)\n","\n","# 로지스틱 회귀 모델\n","from sklearn.linear_model import LogisticRegression\n","lr_model = LogisticRegression()\n","lr_model.fit(x_tr, y_tr)\n","y_val_pred = lr_model.predict(x_val)\n","\n","# Confusion Matrix\n","from sklearn.metrics import confusion_matrix\n","sns.heatmap(confusion_matrix(y_val, y_val_pred), annot=True, cbar=False, square=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":432},"id":"NbltIXHADWWZ","executionInfo":{"status":"ok","timestamp":1706848163281,"user_tz":-540,"elapsed":985,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"e9d5c1d9-d380-4bc4-a1dc-35844bb5d141"},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["# 평가지표\n","from sklearn.metrics import accuracy_score, precision_score, recall_score\n","from sklearn.metrics import f1_score, roc_auc_score\n","\n","print('Accuracy:%.4f' % accuracy_score(y_val, y_val_pred))\n","print('Precision:%.4f'% precision_score(y_val, y_val_pred))   # FP(False Positive)가 낮다.\n","print('Recall:%.4f'% recall_score(y_val, y_val_pred))         # FN(False Negative)가 낮다.\n","print('F1:%.4f'% f1_score(y_val, y_val_pred))                 # 위 2개의 조화평균. 예측력 종합적 평가.\n","print('AUC:%.4f'% roc_auc_score(y_val, y_val_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Csrx5M_mE552","executionInfo":{"status":"ok","timestamp":1706848997150,"user_tz":-540,"elapsed":347,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"300cfa56-eb61-45e8-9681-0ed4dff8fa46"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.6760\n","Precision:0.6667\n","Recall:0.2687\n","F1:0.3830\n","AUC:0.5941\n"]}]},{"cell_type":"code","source":["# test 데이터에 대한 예측값 정리\n","y_test_pred = lr_model.predict(x_test)\n","\n","# 제출 양식에 맞게 정리\n","submission['Survived'] = y_test_pred.astype(int)\n","\n","# 제출 파일 정리\n","submission_filepath = 'baseline_num_lr_submission_001.csv'\n","submission.to_csv(submission_filepath, index=False)\n","submission.head(5)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-Kd6viG3JY9I","executionInfo":{"status":"ok","timestamp":1706849973515,"user_tz":-540,"elapsed":343,"user":{"displayName":"심심한백수","userId":"14387771983578606102"}},"outputId":"0cfb1129-ee6d-43c8-f72a-74111c468254"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   PassengerId  Survived\n","0          892         0\n","1          893         0\n","2          894         0\n","3          895         0\n","4          896         0"],"text/html":["\n","  <div id=\"df-41fe09e8-3550-45b8-affa-0077d9bf657c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41fe09e8-3550-45b8-affa-0077d9bf657c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41fe09e8-3550-45b8-affa-0077d9bf657c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41fe09e8-3550-45b8-affa-0077d9bf657c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c654d0bc-90cd-4e8f-81cc-46cf4306021e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c654d0bc-90cd-4e8f-81cc-46cf4306021e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c654d0bc-90cd-4e8f-81cc-46cf4306021e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":36}]}]}